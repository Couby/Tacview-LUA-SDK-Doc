<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tacview Lua SDK Doc</title>
    <link>https://couby.github.io/Tacview-LUA-SDK-Doc/</link>
    <description>Recent content on Tacview Lua SDK Doc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Apr 2019 18:16:54 +0200</lastBuildDate>
    
	<atom:link href="https://couby.github.io/Tacview-LUA-SDK-Doc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Global functions</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/global-functions/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:54 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/global-functions/</guid>
      <description> Close() Tacview 1.7.2
Unconditionally closes the application.
NOTE: this function does not ask the user to save his work.
</description>
    </item>
    
    <item>
      <title>Settings</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/settings/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:53 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/settings/</guid>
      <description>This interface is provided to access Tacview configuration. If you want to save and load settings for your own addon, see AddOns.Current.Settings
Settings.SetBoolean( settingPath, newBooleanValue ) Tacview 1.7.2
Save a Boolean setting under the given name.
settingPath can be one of the following:
 &amp;quot;UI.View.Grid.Visible&amp;quot; &amp;ndash; Enable/disable latitude/longitude grid &amp;quot;UI.View.HUD.Visible&amp;quot; &amp;ndash; Enable/disable cockpit head-up-display &amp;quot;UI.View.Overlay.Visible&amp;quot; &amp;ndash; Enable/disable all the informations displayed on top of the 3D view &amp;quot;UI.View.Camera.Dogfight.Enabled&amp;quot; &amp;ndash; Enable/disable dogfight camera mode (when in external view)  Settings.</description>
    </item>
    
    <item>
      <title>Add Ons</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/addons/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:52 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/addons/</guid>
      <description>The add-ons interface is mainly used to specify information about your add-on.
Your addon settings will be saved and restored at the next session of Tacview.
AddOns.Current.GetPath() Tacview 1.7.4
Retrieve the current addon root path.
This is typically where your addon dll or lua file is stored.
This function is useful to access and load your custom resources without hardcoding a path to them.
Return value:
AddOn path (e.g. C:\ProgramData\Tacview\AddOns\Tutorial 1 - Hello World - CS\)</description>
    </item>
    
    <item>
      <title>Log</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/log/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:51 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/log/</guid>
      <description>The log module is typically used to log messages and errors which can be used to diagnose specific issues.
All strings sent to the log will also be saved in the %TEMP%\Tacview.log file.
Please, use the log wisely and try to display only meaningful messages to the end-user.
Do not spam the log with internal development messages, this may confuse the user who is looking for more relevant status from other modules.</description>
    </item>
    
    <item>
      <title>UI.MessageBox</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/ui.messagebox/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:50 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/ui.messagebox/</guid>
      <description>Message boxes can be used to display modal notifications and ask for simple questions to the user.
It is suggested to not use too many message boxes as they are breaking the productivity flow of the user.
Whenever possible, you can use the log to output most of you messages and rely on settings to choose the appropriate behavior depending on the circumstances.
UI.MessageBox.Info( textMessage ) Tacview 1.7.2
UI.MessageBox.Error( textMessage ) Tacview 1.</description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/math/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:49 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/math/</guid>
      <description>This module contains all the necessary tools to convert and modify typical telemetry data.
Here, we are calling vectors, tables with three components:
{ x = number, y = number, z = number, }  Math.Angle.Subtract( leftAngle , rightAngle ) Tacview 1.7.2
Substracts two radian angles.
Return value:
Difference between leftAngle and rightAngle.
The result is normalized to [-pi, +pi].
Math.Units.FeetToMeters( value ) Tacview 1.8.0
Converts feet distances in meters</description>
    </item>
    
    <item>
      <title>Context</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/context/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:48 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/context/</guid>
      <description>This contains all the information relative the telemetry representation on screen. NOTE: See Lua Main Interface for additional functions.
Context.GetAbsoluteTime() Tacview 1.7.5
Retrieves the current telemetry time in seconds since 1970-01-01 (this parameter is useful to talk with the Telemetry module).
Context.SetAbsoluteTime( absoluteTime ) Tacview 1.7.6
Set current telemetry time for data playback in seconds since 1970-01-01.
NOTE: DO NOT force the time at every frame, especially during real-time telemetry recording.</description>
    </item>
    
    <item>
      <title>Telemetry</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/telemetry/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:47 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/telemetry/</guid>
      <description>This module is the heart of Tacview.
Use the telemetry manager to read and write any data for any dynamic object.
Telemetry.BeginningOfTime Tacview 1.7.5
Telemetry.EndOfTime Tacview 1.7.5
Constants used to specify two special time stamps.
BeginningOfTime = -3.4028234663853e+38 EndOfTime = 3.4028234663853e+38  BeginningOfTime is typically used to create timeless objects like waypoints or buildings. EndOfTime is usefull for exemple to identify objects still alive at the end of telemetry recording.</description>
    </item>
    
    <item>
      <title>Terrain</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/terrain/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:46 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-core-interface/terrain/</guid>
      <description>The following functions can be used to customize the terrain as well as to retrieve some information about it.
Terrain.GetElevation( longitude , latitude ) Tacview 1.7.5
Retrieve given point elevation in meter. Longitude and latitude are in radian.</description>
    </item>
    
    <item>
      <title>UI</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/ui/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:46 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/ui/</guid>
      <description>General functions to manipulate Tacview UI and aspect.
UI.EnterFullScreen() Tacview 1.7.2
UI.ExitFullScreen() Tacview 1.7.2
Enter/exit full screen mode.
When switched to full screen, Tacview displays only the 3D view in a borderless window.
This can be useful during an online debriefing, so the user can fully focus his attention on the objects displayed in the 3D view.
The user can manually switch between full screen and windowed mode by pressing [ALT] + [ENTER].</description>
    </item>
    
    <item>
      <title>UI.Menus</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/ui.menus/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:45 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/ui.menus/</guid>
      <description>The Menu interface is useful to create and insert commands and options in Tacview menus.
All new menus will be added to the addons menu.
Tacview will automatically remove menu items of an addon which is unloaded.
UI.Menus.AddMenu( parentMenuId , textLabel ) Tacview 1.7.2
Creates and inserts a menu in Tacview menu.
You can specify the id of a parent menu, or you can use nil to insert your menu in Tacview addons main menu.</description>
    </item>
    
    <item>
      <title>UI.Renderer</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/ui.renderer/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:44 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/ui.renderer/</guid>
      <description>The renderer is typically used to display objects in the main 3D view.
NOTE: Drawing functions can be called only during draw events.
See Events.* for how to register drawing callbacks.
UI.Renderer.GetWidth() Tacview 1.7.2
Retrieve the renderer width in pixels or nil when not in a draw event.
UI.Renderer.GetHeight() Tacview 1.7.2
Retrieve the renderer height in pixels or nil when not in a draw event.
UI.Renderer.LoadTexture( texturePath [, wrapRepeat [, compressed] ] ) Tacview 1.</description>
    </item>
    
    <item>
      <title>Events</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/events/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:43 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/events/</guid>
      <description>You can register callbacks for different kind of events in Tacview.
Events.Update.RegisterListener( function ) Tacview 1.7.2
Once a frame, Tacview will call your function which must match the following signature:
Update( dt , absoluteTime )
 dt is the number of seconds elapsed in real life since the last Update() absoluteTime is the current telemetry time in seconds since 1970-01-01 (this parameter is useful to talk with the Telemetry module)  Events.</description>
    </item>
    
    <item>
      <title>Context</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/context/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:42 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/context/</guid>
      <description>This contains all the information relative the telemetry representation on screen.
NOTE: See Lua Core Interface for additional functions.
Context.GetSelectedObject( objectIndex ) Tacview 1.7.2
Retrieves the handle of one of the selected objects.
objectIndex can be either 0 for the primary object or 1 for the secondary object.
It is currently possible to select two objects at the same time.
Context.SetSelectedObject( objectIndex , objectHandle ) Tacview 1.7.2
Choose which object is currently selected.</description>
    </item>
    
    <item>
      <title>Context.Camera</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/context.camera/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:41 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/context.camera/</guid>
      <description>The camera is used to define the user point-of-view in the 3D window of Tacview.
Context.Camera.GetMode() Tacview 1.7.2
Returns the current camera mode.
Return value:
Camera.Cockpit
Camera.External
Camera.Satellite
Camera.Free
Context.Camera.SetOffset( offsetData ) Tacview 1.7.2
Temporarily offset camera position and rotation.
The offset is automatically reset at each new frame when not overridden by an addon.
The following components can be specified, all of them are optional:
offsetData = { lateral = meters_positive_to_the_right , longitudinal = meters_positive_forward , vertical = meters_positive_up , roll = radian , pitch = radian , yaw = radian , }  Context.</description>
    </item>
    
    <item>
      <title>Context.Playback</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/context.playback/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:40 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/lua-main-interface/context.playback/</guid>
      <description>Functions to control the playback of loaded telemetry data.
Context.Playback.Play() Tacview 1.7.6
Context.Playback.Pause() Tacview 1.7.6
Resume / pause playback.
Context.Playback.IsPlaying() Tacview 1.7.6
Returns false if the playback is currently paused.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://couby.github.io/Tacview-LUA-SDK-Doc/credits/</link>
      <pubDate>Sat, 13 Apr 2019 18:16:40 +0200</pubDate>
      
      <guid>https://couby.github.io/Tacview-LUA-SDK-Doc/credits/</guid>
      <description>Copyright © 2006-2019 Raia Software Inc. All rights reserved.
Tacview application Author : Frantz &amp;ldquo;Vyrtuoz&amp;rdquo; Raia
LUA SDK documentation by Frantz &amp;ldquo;Vyrtuoz&amp;rdquo; Raia
LUA SDK documentation french translation by Frédéric &amp;ldquo;Couby Stark&amp;rdquo; Coubard</description>
    </item>
    
  </channel>
</rss>